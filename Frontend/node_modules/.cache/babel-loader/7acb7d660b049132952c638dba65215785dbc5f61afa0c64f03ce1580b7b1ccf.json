{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Tom\\\\Downloads\\\\perfect-password\\\\Frontend\\\\src\\\\pages\\\\Encryption.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Encryption() {\n  _s();\n  const [mode, setMode] = useState(\"encrypt\");\n  const [algorithm, setAlgorithm] = useState(\"aes\");\n  const [input, setInput] = useState(\"\");\n  const [key, setKey] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [copied, setCopied] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const algorithms = [{\n    id: \"aes\",\n    name: \"AES-256\"\n  }, {\n    id: \"aes-gcm\",\n    name: \"AES-GCM\"\n  }];\n  const handleModeChange = newMode => {\n    setMode(newMode);\n    setOutput(\"\");\n    setError(\"\");\n  };\n  const handleAlgorithmChange = newAlgorithm => {\n    setAlgorithm(newAlgorithm);\n    setOutput(\"\");\n    setError(\"\");\n  };\n  const processData = async () => {\n    if (!input || !key) {\n      setError(\"Veuillez remplir tous les champs\");\n      return;\n    }\n    setIsProcessing(true);\n    setError(\"\");\n    setOutput(\"\");\n    try {\n      if (mode === \"encrypt\") {\n        const encryptedText = await encryptData(input, key, algorithm);\n        setOutput(encryptedText);\n      } else {\n        try {\n          const decryptedText = await decryptData(input, key, algorithm);\n          setOutput(decryptedText);\n        } catch (e) {\n          setError(\"Impossible de déchiffrer le texte. Vérifiez la clé et le texte chiffré.\");\n        }\n      }\n    } catch (err) {\n      setError(`Erreur: ${err.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Fonction pour dériver une clé à partir d'un mot de passe\n  const deriveKey = async (password, algorithm) => {\n    const encoder = new TextEncoder();\n    const passwordData = encoder.encode(password);\n\n    // Utiliser SHA-256 pour créer un hachage du mot de passe\n    const passwordHash = await crypto.subtle.digest(\"SHA-256\", passwordData);\n\n    // Créer une clé à partir du hachage\n    const keyUsages = [\"encrypt\", \"decrypt\"];\n    let keyParams;\n    if (algorithm === \"aes\") {\n      keyParams = {\n        name: \"AES-CBC\",\n        length: 256\n      };\n    } else if (algorithm === \"aes-gcm\") {\n      keyParams = {\n        name: \"AES-GCM\",\n        length: 256\n      };\n    }\n    return crypto.subtle.importKey(\"raw\", passwordHash, keyParams, false, keyUsages);\n  };\n\n  // Fonction pour chiffrer des données\n  const encryptData = async (data, password, algorithm) => {\n    try {\n      const encoder = new TextEncoder();\n      const dataToEncrypt = encoder.encode(data);\n      let encryptedData, iv;\n      if (algorithm === \"aes\") {\n        // Générer un vecteur d'initialisation aléatoire\n        iv = crypto.getRandomValues(new Uint8Array(16));\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes\");\n\n        // Chiffrer les données\n        const encryptedBuffer = await crypto.subtle.encrypt({\n          name: \"AES-CBC\",\n          iv\n        }, key, dataToEncrypt);\n        encryptedData = encryptedBuffer;\n      } else if (algorithm === \"aes-gcm\") {\n        // Générer un vecteur d'initialisation aléatoire\n        iv = crypto.getRandomValues(new Uint8Array(12));\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes-gcm\");\n\n        // Chiffrer les données\n        const encryptedBuffer = await crypto.subtle.encrypt({\n          name: \"AES-GCM\",\n          iv,\n          tagLength: 128\n        }, key, dataToEncrypt);\n        encryptedData = encryptedBuffer;\n      }\n\n      // Combiner IV et données chiffrées\n      const combinedData = new Uint8Array(iv.length + new Uint8Array(encryptedData).length);\n      combinedData.set(iv);\n      combinedData.set(new Uint8Array(encryptedData), iv.length);\n\n      // Convertir en base64 pour un stockage facile\n      return btoa(String.fromCharCode.apply(null, combinedData));\n    } catch (error) {\n      console.error(\"Erreur de chiffrement:\", error);\n      throw new Error(\"Échec du chiffrement\");\n    }\n  };\n\n  // Fonction pour déchiffrer des données\n  const decryptData = async (encryptedBase64, password, algorithm) => {\n    try {\n      // Convertir de base64 à tableau d'octets\n      const encryptedData = Uint8Array.from(atob(encryptedBase64), c => c.charCodeAt(0));\n      let iv, ciphertext;\n      if (algorithm === \"aes\") {\n        // Extraire IV (16 octets pour AES-CBC)\n        iv = encryptedData.slice(0, 16);\n        ciphertext = encryptedData.slice(16);\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes\");\n\n        // Déchiffrer les données\n        const decryptedBuffer = await crypto.subtle.decrypt({\n          name: \"AES-CBC\",\n          iv\n        }, key, ciphertext);\n\n        // Convertir le résultat en texte\n        const decoder = new TextDecoder();\n        return decoder.decode(decryptedBuffer);\n      } else if (algorithm === \"aes-gcm\") {\n        // Extraire IV (12 octets pour AES-GCM)\n        iv = encryptedData.slice(0, 12);\n        ciphertext = encryptedData.slice(12);\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes-gcm\");\n\n        // Déchiffrer les données\n        const decryptedBuffer = await crypto.subtle.decrypt({\n          name: \"AES-GCM\",\n          iv,\n          tagLength: 128\n        }, key, ciphertext);\n\n        // Convertir le résultat en texte\n        const decoder = new TextDecoder();\n        return decoder.decode(decryptedBuffer);\n      }\n    } catch (error) {\n      console.error(\"Erreur de déchiffrement:\", error);\n      throw new Error(\"Échec du déchiffrement\");\n    }\n  };\n  const copyToClipboard = () => {\n    if (!output) return;\n    navigator.clipboard.writeText(output).then(() => {\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }).catch(err => {\n      console.error(\"Erreur lors de la copie:\", err);\n    });\n  };\n\n  // Fonction pour échapper les entrées utilisateur contre les attaques XSS\n  const escapeHtml = unsafe => {\n    return unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n  };\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    title: \"Chiffrement et D\\xE9chiffrement\",\n    description: \"Chiffrez et d\\xE9chiffrez vos donn\\xE9es avec diff\\xE9rents algorithmes. Tous les calculs sont effectu\\xE9s localement dans votre navigateur.\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#1a1a2e] border border-purple-900/30 rounded-lg p-6 backdrop-blur-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border border-purple-900/30 rounded-md overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleModeChange(\"encrypt\"),\n            className: `flex-1 py-3 px-4 text-center transition-colors ${mode === \"encrypt\" ? \"bg-purple-600 text-white\" : \"bg-[#0f0f1a] text-gray-300 hover:bg-[#0f0f1a]/80\"}`,\n            children: \"Chiffrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleModeChange(\"decrypt\"),\n            className: `flex-1 py-3 px-4 text-center transition-colors ${mode === \"decrypt\" ? \"bg-purple-600 text-white\" : \"bg-[#0f0f1a] text-gray-300 hover:bg-[#0f0f1a]/80\"}`,\n            children: \"D\\xE9chiffrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-400 mb-2\",\n          children: \"Algorithme de chiffrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-3\",\n          children: algorithms.map(algo => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAlgorithmChange(algo.id),\n            className: `py-2 px-4 rounded-md text-sm font-medium transition-colors ${algorithm === algo.id ? \"bg-purple-600 text-white\" : \"bg-[#0f0f1a] text-gray-300 hover:bg-[#0f0f1a]/80 border border-purple-900/30\"}`,\n            children: algo.name\n          }, algo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input\",\n          className: \"block text-sm font-medium text-gray-400 mb-2\",\n          children: mode === \"encrypt\" ? \"Texte à chiffrer\" : \"Texte à déchiffrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input\",\n          value: input,\n          onChange: e => setInput(escapeHtml(e.target.value)),\n          className: \"w-full bg-[#0f0f1a] border border-purple-900/30 rounded-md px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-purple-500 min-h-[100px]\",\n          placeholder: mode === \"encrypt\" ? \"Entrez le texte à chiffrer\" : \"Entrez le texte chiffré à déchiffrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"key\",\n          className: \"block text-sm font-medium text-gray-400 mb-2\",\n          children: [\"Cl\\xE9 de \", mode === \"encrypt\" ? \"chiffrement\" : \"déchiffrement\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"key\",\n          value: key,\n          onChange: e => setKey(escapeHtml(e.target.value)),\n          className: \"w-full bg-[#0f0f1a] border border-purple-900/30 rounded-md px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-purple-500\",\n          placeholder: \"Entrez votre cl\\xE9 secr\\xE8te\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processData,\n          disabled: !input || !key || isProcessing,\n          className: `w-full bg-purple-600 hover:bg-purple-700 text-white py-3 rounded-md transition-colors ${!input || !key || isProcessing ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n          children: isProcessing ? \"Traitement en cours...\" : mode === \"encrypt\" ? \"Chiffrer le texte\" : \"Déchiffrer le texte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 p-3 bg-red-500/20 border border-red-500/30 rounded-md text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-400 mb-2\",\n          children: mode === \"encrypt\" ? \"Texte chiffré\" : \"Texte déchiffré\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-[#0f0f1a] border border-purple-900/30 rounded-md px-4 py-3 text-white font-mono break-all\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: copyToClipboard,\n            className: \"absolute top-2 right-2 bg-[#0f0f1a] hover:bg-[#0f0f1a]/80 text-white p-2 rounded-md border border-purple-900/30\",\n            title: \"Copier dans le presse-papiers\",\n            children: copied ? /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5 text-green-400\",\n              viewBox: \"0 0 20 20\",\n              fill: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fillRule: \"evenodd\",\n                d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",\n                clipRule: \"evenodd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5 text-purple-400\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 p-4 bg-[#0f0f1a] rounded-md border border-purple-900/30\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-3 text-purple-400\",\n          children: \"\\xC0 propos des algorithmes de chiffrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-purple-300\",\n              children: \"AES-256\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 text-sm mt-1\",\n              children: \"Advanced Encryption Standard avec une cl\\xE9 de 256 bits. C'est l'un des algorithmes de chiffrement les plus s\\xE9curis\\xE9s et les plus utilis\\xE9s au monde, adopt\\xE9 par le gouvernement am\\xE9ricain.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-purple-300\",\n              children: \"AES-GCM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 text-sm mt-1\",\n              children: \"Mode d'op\\xE9ration Galois/Counter pour AES qui fournit \\xE0 la fois le chiffrement et l'authentification. Il est particuli\\xE8rement efficace et s\\xE9curis\\xE9 pour les communications chiffr\\xE9es.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-purple-500/10 border border-purple-500/30 rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-purple-300 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note de s\\xE9curit\\xE9 :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), \" Toutes les op\\xE9rations de chiffrement sont effectu\\xE9es localement dans votre navigateur gr\\xE2ce \\xE0 l'API Web Crypto. Vos donn\\xE9es ne quittent jamais votre appareil.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(Encryption, \"JzBjIB1S24eWo3VXq5SnTnPyIHY=\");\n_c = Encryption;\nexport default Encryption;\nvar _c;\n$RefreshReg$(_c, \"Encryption\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","AppLayout","jsxDEV","_jsxDEV","Encryption","mode","setMode","algorithm","setAlgorithm","input","setInput","key","setKey","output","setOutput","error","setError","copied","setCopied","isProcessing","setIsProcessing","algorithms","id","name","handleModeChange","newMode","handleAlgorithmChange","newAlgorithm","processData","encryptedText","encryptData","decryptedText","decryptData","e","err","message","deriveKey","password","encoder","TextEncoder","passwordData","encode","passwordHash","crypto","subtle","digest","keyUsages","keyParams","length","importKey","data","dataToEncrypt","encryptedData","iv","getRandomValues","Uint8Array","encryptedBuffer","encrypt","tagLength","combinedData","set","btoa","String","fromCharCode","apply","console","Error","encryptedBase64","from","atob","c","charCodeAt","ciphertext","slice","decryptedBuffer","decrypt","decoder","TextDecoder","decode","copyToClipboard","navigator","clipboard","writeText","then","setTimeout","catch","escapeHtml","unsafe","replace","title","description","children","className","onClick","fileName","lineNumber","columnNumber","map","algo","htmlFor","value","onChange","target","placeholder","type","disabled","xmlns","viewBox","fill","fillRule","d","clipRule","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/Tom/Downloads/perfect-password/Frontend/src/pages/Encryption.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport AppLayout from \"../components/AppLayout\"\n\nfunction Encryption() {\n  const [mode, setMode] = useState(\"encrypt\")\n  const [algorithm, setAlgorithm] = useState(\"aes\")\n  const [input, setInput] = useState(\"\")\n  const [key, setKey] = useState(\"\")\n  const [output, setOutput] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [copied, setCopied] = useState(false)\n  const [isProcessing, setIsProcessing] = useState(false)\n\n  const algorithms = [\n    { id: \"aes\", name: \"AES-256\" },\n    { id: \"aes-gcm\", name: \"AES-GCM\" },\n  ]\n\n  const handleModeChange = (newMode) => {\n    setMode(newMode)\n    setOutput(\"\")\n    setError(\"\")\n  }\n\n  const handleAlgorithmChange = (newAlgorithm) => {\n    setAlgorithm(newAlgorithm)\n    setOutput(\"\")\n    setError(\"\")\n  }\n\n  const processData = async () => {\n    if (!input || !key) {\n      setError(\"Veuillez remplir tous les champs\")\n      return\n    }\n\n    setIsProcessing(true)\n    setError(\"\")\n    setOutput(\"\")\n\n    try {\n      if (mode === \"encrypt\") {\n        const encryptedText = await encryptData(input, key, algorithm)\n        setOutput(encryptedText)\n      } else {\n        try {\n          const decryptedText = await decryptData(input, key, algorithm)\n          setOutput(decryptedText)\n        } catch (e) {\n          setError(\"Impossible de déchiffrer le texte. Vérifiez la clé et le texte chiffré.\")\n        }\n      }\n    } catch (err) {\n      setError(`Erreur: ${err.message}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  // Fonction pour dériver une clé à partir d'un mot de passe\n  const deriveKey = async (password, algorithm) => {\n    const encoder = new TextEncoder()\n    const passwordData = encoder.encode(password)\n\n    // Utiliser SHA-256 pour créer un hachage du mot de passe\n    const passwordHash = await crypto.subtle.digest(\"SHA-256\", passwordData)\n\n    // Créer une clé à partir du hachage\n    const keyUsages = [\"encrypt\", \"decrypt\"]\n    let keyParams\n\n    if (algorithm === \"aes\") {\n      keyParams = {\n        name: \"AES-CBC\",\n        length: 256,\n      }\n    } else if (algorithm === \"aes-gcm\") {\n      keyParams = {\n        name: \"AES-GCM\",\n        length: 256,\n      }\n    }\n\n    return crypto.subtle.importKey(\"raw\", passwordHash, keyParams, false, keyUsages)\n  }\n\n  // Fonction pour chiffrer des données\n  const encryptData = async (data, password, algorithm) => {\n    try {\n      const encoder = new TextEncoder()\n      const dataToEncrypt = encoder.encode(data)\n\n      let encryptedData, iv\n\n      if (algorithm === \"aes\") {\n        // Générer un vecteur d'initialisation aléatoire\n        iv = crypto.getRandomValues(new Uint8Array(16))\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes\")\n\n        // Chiffrer les données\n        const encryptedBuffer = await crypto.subtle.encrypt(\n          {\n            name: \"AES-CBC\",\n            iv,\n          },\n          key,\n          dataToEncrypt,\n        )\n\n        encryptedData = encryptedBuffer\n      } else if (algorithm === \"aes-gcm\") {\n        // Générer un vecteur d'initialisation aléatoire\n        iv = crypto.getRandomValues(new Uint8Array(12))\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes-gcm\")\n\n        // Chiffrer les données\n        const encryptedBuffer = await crypto.subtle.encrypt(\n          {\n            name: \"AES-GCM\",\n            iv,\n            tagLength: 128,\n          },\n          key,\n          dataToEncrypt,\n        )\n\n        encryptedData = encryptedBuffer\n      }\n\n      // Combiner IV et données chiffrées\n      const combinedData = new Uint8Array(iv.length + new Uint8Array(encryptedData).length)\n      combinedData.set(iv)\n      combinedData.set(new Uint8Array(encryptedData), iv.length)\n\n      // Convertir en base64 pour un stockage facile\n      return btoa(String.fromCharCode.apply(null, combinedData))\n    } catch (error) {\n      console.error(\"Erreur de chiffrement:\", error)\n      throw new Error(\"Échec du chiffrement\")\n    }\n  }\n\n  // Fonction pour déchiffrer des données\n  const decryptData = async (encryptedBase64, password, algorithm) => {\n    try {\n      // Convertir de base64 à tableau d'octets\n      const encryptedData = Uint8Array.from(atob(encryptedBase64), (c) => c.charCodeAt(0))\n\n      let iv, ciphertext\n\n      if (algorithm === \"aes\") {\n        // Extraire IV (16 octets pour AES-CBC)\n        iv = encryptedData.slice(0, 16)\n        ciphertext = encryptedData.slice(16)\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes\")\n\n        // Déchiffrer les données\n        const decryptedBuffer = await crypto.subtle.decrypt(\n          {\n            name: \"AES-CBC\",\n            iv,\n          },\n          key,\n          ciphertext,\n        )\n\n        // Convertir le résultat en texte\n        const decoder = new TextDecoder()\n        return decoder.decode(decryptedBuffer)\n      } else if (algorithm === \"aes-gcm\") {\n        // Extraire IV (12 octets pour AES-GCM)\n        iv = encryptedData.slice(0, 12)\n        ciphertext = encryptedData.slice(12)\n\n        // Dériver une clé à partir du mot de passe\n        const key = await deriveKey(password, \"aes-gcm\")\n\n        // Déchiffrer les données\n        const decryptedBuffer = await crypto.subtle.decrypt(\n          {\n            name: \"AES-GCM\",\n            iv,\n            tagLength: 128,\n          },\n          key,\n          ciphertext,\n        )\n\n        // Convertir le résultat en texte\n        const decoder = new TextDecoder()\n        return decoder.decode(decryptedBuffer)\n      }\n    } catch (error) {\n      console.error(\"Erreur de déchiffrement:\", error)\n      throw new Error(\"Échec du déchiffrement\")\n    }\n  }\n\n  const copyToClipboard = () => {\n    if (!output) return\n\n    navigator.clipboard\n      .writeText(output)\n      .then(() => {\n        setCopied(true)\n        setTimeout(() => setCopied(false), 2000)\n      })\n      .catch((err) => {\n        console.error(\"Erreur lors de la copie:\", err)\n      })\n  }\n\n  // Fonction pour échapper les entrées utilisateur contre les attaques XSS\n  const escapeHtml = (unsafe) => {\n    return unsafe\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\")\n  }\n\n  return (\n    <AppLayout\n      title=\"Chiffrement et Déchiffrement\"\n      description=\"Chiffrez et déchiffrez vos données avec différents algorithmes. Tous les calculs sont effectués localement dans votre navigateur.\"\n    >\n      <div className=\"bg-[#1a1a2e] border border-purple-900/30 rounded-lg p-6 backdrop-blur-sm\">\n        <div className=\"mb-6\">\n          <div className=\"flex border border-purple-900/30 rounded-md overflow-hidden\">\n            <button\n              onClick={() => handleModeChange(\"encrypt\")}\n              className={`flex-1 py-3 px-4 text-center transition-colors ${\n                mode === \"encrypt\" ? \"bg-purple-600 text-white\" : \"bg-[#0f0f1a] text-gray-300 hover:bg-[#0f0f1a]/80\"\n              }`}\n            >\n              Chiffrer\n            </button>\n            <button\n              onClick={() => handleModeChange(\"decrypt\")}\n              className={`flex-1 py-3 px-4 text-center transition-colors ${\n                mode === \"decrypt\" ? \"bg-purple-600 text-white\" : \"bg-[#0f0f1a] text-gray-300 hover:bg-[#0f0f1a]/80\"\n              }`}\n            >\n              Déchiffrer\n            </button>\n          </div>\n        </div>\n\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-400 mb-2\">Algorithme de chiffrement</label>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            {algorithms.map((algo) => (\n              <button\n                key={algo.id}\n                onClick={() => handleAlgorithmChange(algo.id)}\n                className={`py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n                  algorithm === algo.id\n                    ? \"bg-purple-600 text-white\"\n                    : \"bg-[#0f0f1a] text-gray-300 hover:bg-[#0f0f1a]/80 border border-purple-900/30\"\n                }`}\n              >\n                {algo.name}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mb-6\">\n          <label htmlFor=\"input\" className=\"block text-sm font-medium text-gray-400 mb-2\">\n            {mode === \"encrypt\" ? \"Texte à chiffrer\" : \"Texte à déchiffrer\"}\n          </label>\n          <textarea\n            id=\"input\"\n            value={input}\n            onChange={(e) => setInput(escapeHtml(e.target.value))}\n            className=\"w-full bg-[#0f0f1a] border border-purple-900/30 rounded-md px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-purple-500 min-h-[100px]\"\n            placeholder={mode === \"encrypt\" ? \"Entrez le texte à chiffrer\" : \"Entrez le texte chiffré à déchiffrer\"}\n          />\n        </div>\n\n        <div className=\"mb-6\">\n          <label htmlFor=\"key\" className=\"block text-sm font-medium text-gray-400 mb-2\">\n            Clé de {mode === \"encrypt\" ? \"chiffrement\" : \"déchiffrement\"}\n          </label>\n          <input\n            type=\"text\"\n            id=\"key\"\n            value={key}\n            onChange={(e) => setKey(escapeHtml(e.target.value))}\n            className=\"w-full bg-[#0f0f1a] border border-purple-900/30 rounded-md px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            placeholder=\"Entrez votre clé secrète\"\n          />\n        </div>\n\n        <div className=\"mb-6\">\n          <button\n            onClick={processData}\n            disabled={!input || !key || isProcessing}\n            className={`w-full bg-purple-600 hover:bg-purple-700 text-white py-3 rounded-md transition-colors ${\n              !input || !key || isProcessing ? \"opacity-50 cursor-not-allowed\" : \"\"\n            }`}\n          >\n            {isProcessing ? \"Traitement en cours...\" : mode === \"encrypt\" ? \"Chiffrer le texte\" : \"Déchiffrer le texte\"}\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"mb-6 p-3 bg-red-500/20 border border-red-500/30 rounded-md text-red-400\">{error}</div>\n        )}\n\n        {output && (\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n              {mode === \"encrypt\" ? \"Texte chiffré\" : \"Texte déchiffré\"}\n            </label>\n            <div className=\"relative\">\n              <div className=\"bg-[#0f0f1a] border border-purple-900/30 rounded-md px-4 py-3 text-white font-mono break-all\">\n                {output}\n              </div>\n              <button\n                onClick={copyToClipboard}\n                className=\"absolute top-2 right-2 bg-[#0f0f1a] hover:bg-[#0f0f1a]/80 text-white p-2 rounded-md border border-purple-900/30\"\n                title=\"Copier dans le presse-papiers\"\n              >\n                {copied ? (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 text-green-400\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                ) : (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-5 w-5 text-purple-400\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                    />\n                  </svg>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"mt-8 p-4 bg-[#0f0f1a] rounded-md border border-purple-900/30\">\n          <h3 className=\"text-lg font-semibold mb-3 text-purple-400\">À propos des algorithmes de chiffrement</h3>\n          <ul className=\"space-y-3\">\n            <li>\n              <span className=\"font-medium text-purple-300\">AES-256</span>\n              <p className=\"text-gray-300 text-sm mt-1\">\n                Advanced Encryption Standard avec une clé de 256 bits. C'est l'un des algorithmes de chiffrement les\n                plus sécurisés et les plus utilisés au monde, adopté par le gouvernement américain.\n              </p>\n            </li>\n            <li>\n              <span className=\"font-medium text-purple-300\">AES-GCM</span>\n              <p className=\"text-gray-300 text-sm mt-1\">\n                Mode d'opération Galois/Counter pour AES qui fournit à la fois le chiffrement et l'authentification. Il\n                est particulièrement efficace et sécurisé pour les communications chiffrées.\n              </p>\n            </li>\n          </ul>\n\n          <div className=\"mt-4 p-3 bg-purple-500/10 border border-purple-500/30 rounded-md\">\n            <p className=\"text-purple-300 text-sm\">\n              <strong>Note de sécurité :</strong> Toutes les opérations de chiffrement sont effectuées localement dans\n              votre navigateur grâce à l'API Web Crypto. Vos données ne quittent jamais votre appareil.\n            </p>\n          </div>\n        </div>\n      </div>\n    </AppLayout>\n  )\n}\n\nexport default Encryption\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}