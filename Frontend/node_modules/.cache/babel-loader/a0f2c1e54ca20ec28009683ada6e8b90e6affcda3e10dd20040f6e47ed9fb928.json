{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Tom\\\\Downloads\\\\perfect-password\\\\Frontend\\\\src\\\\components\\\\AnimatedCharacter.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\n// Caractères possibles pour l'animation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?áàâäãåçéèêëíìîïñóòôöõúùûüýÿæœ\";\nfunction AnimatedCharacter({\n  char,\n  delay,\n  isComplete,\n  isVisible\n}) {\n  _s();\n  const [randomChars, setRandomChars] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Générer une séquence aléatoire de caractères pour l'animation\n  useEffect(() => {\n    if (!isVisible) return;\n    const sequence = [];\n    // Générer 10 caractères aléatoires + le caractère final\n    for (let i = 0; i < 10; i++) {\n      sequence.push(chars[Math.floor(Math.random() * chars.length)]);\n    }\n    sequence.push(char); // Le dernier caractère est celui qu'on veut afficher\n    setRandomChars(sequence);\n\n    // Animation de défilement des caractères\n    let index = 0;\n    const interval = setInterval(() => {\n      setCurrentIndex(index);\n      index++;\n      if (index >= sequence.length) {\n        clearInterval(interval);\n      }\n    }, 50); // Vitesse de défilement des caractères\n\n    return () => clearInterval(interval);\n  }, [char, isVisible]);\n  if (!isVisible) {\n    return null; // Ne pas afficher si pas encore visible\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"inline-block\",\n    children: isComplete ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(motion.span, {\n      initial: {\n        opacity: 0.7\n      },\n      animate: {\n        opacity: 1\n      },\n      className: \"text-center\",\n      children: randomChars[currentIndex] || char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimatedCharacter, \"Hjh4XcbHk+lYMeC+nG6SPxhPh2Q=\");\n_c = AnimatedCharacter;\nexport default AnimatedCharacter;\nvar _c;\n$RefreshReg$(_c, \"AnimatedCharacter\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","motion","jsxDEV","_jsxDEV","chars","AnimatedCharacter","char","delay","isComplete","isVisible","randomChars","setRandomChars","currentIndex","setCurrentIndex","sequence","i","push","Math","floor","random","length","index","interval","setInterval","clearInterval","className","children","fileName","lineNumber","columnNumber","span","initial","opacity","animate","_c","$RefreshReg$"],"sources":["C:/Users/Tom/Downloads/perfect-password/Frontend/src/components/AnimatedCharacter.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { motion } from \"framer-motion\"\n\n// Caractères possibles pour l'animation\nconst chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?áàâäãåçéèêëíìîïñóòôöõúùûüýÿæœ\"\n\nfunction AnimatedCharacter({ char, delay, isComplete, isVisible }) {\n  const [randomChars, setRandomChars] = useState([])\n  const [currentIndex, setCurrentIndex] = useState(0)\n\n  // Générer une séquence aléatoire de caractères pour l'animation\n  useEffect(() => {\n    if (!isVisible) return\n\n    const sequence = []\n    // Générer 10 caractères aléatoires + le caractère final\n    for (let i = 0; i < 10; i++) {\n      sequence.push(chars[Math.floor(Math.random() * chars.length)])\n    }\n    sequence.push(char) // Le dernier caractère est celui qu'on veut afficher\n    setRandomChars(sequence)\n\n    // Animation de défilement des caractères\n    let index = 0\n    const interval = setInterval(() => {\n      setCurrentIndex(index)\n      index++\n      if (index >= sequence.length) {\n        clearInterval(interval)\n      }\n    }, 50) // Vitesse de défilement des caractères\n\n    return () => clearInterval(interval)\n  }, [char, isVisible])\n\n  if (!isVisible) {\n    return null // Ne pas afficher si pas encore visible\n  }\n\n  return (\n    <span className=\"inline-block\">\n      {isComplete ? (\n        <span>{char}</span>\n      ) : (\n        <motion.span initial={{ opacity: 0.7 }} animate={{ opacity: 1 }} className=\"text-center\">\n          {randomChars[currentIndex] || char}\n        </motion.span>\n      )}\n    </span>\n  )\n}\n\nexport default AnimatedCharacter\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,eAAe;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GACT,uHAAuH;AAEzH,SAASC,iBAAiBA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAU,CAAC,EAAE;EAAAZ,EAAA;EACjE,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,SAAS,EAAE;IAEhB,MAAMK,QAAQ,GAAG,EAAE;IACnB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BD,QAAQ,CAACE,IAAI,CAACZ,KAAK,CAACa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGf,KAAK,CAACgB,MAAM,CAAC,CAAC,CAAC;IAChE;IACAN,QAAQ,CAACE,IAAI,CAACV,IAAI,CAAC,EAAC;IACpBK,cAAc,CAACG,QAAQ,CAAC;;IAExB;IACA,IAAIO,KAAK,GAAG,CAAC;IACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCV,eAAe,CAACQ,KAAK,CAAC;MACtBA,KAAK,EAAE;MACP,IAAIA,KAAK,IAAIP,QAAQ,CAACM,MAAM,EAAE;QAC5BI,aAAa,CAACF,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,EAAE,CAAC,EAAC;;IAEP,OAAO,MAAME,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAChB,IAAI,EAAEG,SAAS,CAAC,CAAC;EAErB,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,IAAI,EAAC;EACd;EAEA,oBACEN,OAAA;IAAMsB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC3BlB,UAAU,gBACTL,OAAA;MAAAuB,QAAA,EAAOpB;IAAI;MAAAqB,QAAA,EAAA/B,YAAA;MAAAgC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,gBAEnB1B,OAAA,CAACF,MAAM,CAAC6B,IAAI;MAACC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE;MAACC,OAAO,EAAE;QAAED,OAAO,EAAE;MAAE,CAAE;MAACP,SAAS,EAAC,aAAa;MAAAC,QAAA,EACrFhB,WAAW,CAACE,YAAY,CAAC,IAAIN;IAAI;MAAAqB,QAAA,EAAA/B,YAAA;MAAAgC,UAAA;MAAAC,YAAA;IAAA,OACvB;EACd;IAAAF,QAAA,EAAA/B,YAAA;IAAAgC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAAChC,EAAA,CA5CQQ,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AA8C1B,eAAeA,iBAAiB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}