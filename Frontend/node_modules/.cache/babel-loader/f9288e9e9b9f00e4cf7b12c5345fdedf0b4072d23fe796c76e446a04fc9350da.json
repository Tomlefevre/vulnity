{"ast":null,"code":"// Fonction pour échapper les entrées utilisateur contre les attaques XSS\nexport function escapeHtml(unsafe) {\n  if (typeof unsafe !== \"string\") return unsafe;\n  return unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n}\n\n// Fonction pour valider une URL\nexport function isValidUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// Fonction pour valider une adresse email\nexport function isValidEmail(email) {\n  const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  return re.test(String(email).toLowerCase());\n}\n\n// Fonction pour valider un nom de domaine\nexport function isValidDomain(domain) {\n  const re = /^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n  return re.test(domain);\n}\n\n// Fonction pour valider une adresse IP\nexport function isValidIp(ip) {\n  const re = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n  return re.test(ip);\n}","map":{"version":3,"names":["escapeHtml","unsafe","replace","isValidUrl","url","URL","e","isValidEmail","email","re","test","String","toLowerCase","isValidDomain","domain","isValidIp","ip"],"sources":["C:/Users/Tom/Downloads/perfect-password/Frontend/src/utils/security.js"],"sourcesContent":["// Fonction pour échapper les entrées utilisateur contre les attaques XSS\nexport function escapeHtml(unsafe) {\n  if (typeof unsafe !== \"string\") return unsafe\n\n  return unsafe\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\")\n}\n\n// Fonction pour valider une URL\nexport function isValidUrl(url) {\n  try {\n    new URL(url)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n// Fonction pour valider une adresse email\nexport function isValidEmail(email) {\n  const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n  return re.test(String(email).toLowerCase())\n}\n\n// Fonction pour valider un nom de domaine\nexport function isValidDomain(domain) {\n  const re = /^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/\n  return re.test(domain)\n}\n\n// Fonction pour valider une adresse IP\nexport function isValidIp(ip) {\n  const re = /^(\\d{1,3}\\.){3}\\d{1,3}$/\n  return re.test(ip)\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,UAAUA,CAACC,MAAM,EAAE;EACjC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE,OAAOA,MAAM;EAE7C,OAAOA,MAAM,CACVC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CACtBA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CACrBA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CACrBA,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CACvBA,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC;AAC5B;;AAEA;AACA,OAAO,SAASC,UAAUA,CAACC,GAAG,EAAE;EAC9B,IAAI;IACF,IAAIC,GAAG,CAACD,GAAG,CAAC;IACZ,OAAO,IAAI;EACb,CAAC,CAAC,OAAOE,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF;;AAEA;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAClC,MAAMC,EAAE,GAAG,kDAAkD;EAC7D,OAAOA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC;AAC7C;;AAEA;AACA,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAE;EACpC,MAAML,EAAE,GAAG,gEAAgE;EAC3E,OAAOA,EAAE,CAACC,IAAI,CAACI,MAAM,CAAC;AACxB;;AAEA;AACA,OAAO,SAASC,SAASA,CAACC,EAAE,EAAE;EAC5B,MAAMP,EAAE,GAAG,yBAAyB;EACpC,OAAOA,EAAE,CAACC,IAAI,CAACM,EAAE,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}